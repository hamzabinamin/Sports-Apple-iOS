//
//  Exercise.swift
//  MySampleApp
//
//
// Copyright 2018 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.21
//

import Foundation
import UIKit
import AWSDynamoDB

@objcMembers
class Exercise: AWSDynamoDBObjectModel, AWSDynamoDBModeling {
    
    @objc var _exerciseId: NSNumber?
    @objc var _name: String?
    
    class func dynamoDBTableName() -> String {

        return "sportsapple-mobilehub-1970899121-Exercise"
    }
    
    class func hashKeyAttribute() -> String {

        return "_exerciseId"
    }
    
    override class func jsonKeyPathsByPropertyKey() -> [AnyHashable: Any] {
        return [
               "_exerciseId" : "exerciseId",
               "_name" : "Name",
        ]
    }
    
    func getExerciseID() -> NSNumber {
        return self._exerciseId!
    }
    
    func getExerciseName() -> String {
        return self._name!
    }
    
    func setExercise(_exerciseId: NSNumber, _name: String) {
        self._exerciseId = _exerciseId
        self._name = _name
    }
    
    func createExercise() {
        let dynamoDbObjectMapper = AWSDynamoDBObjectMapper.default()
        
        // Create data object using data models you downloaded from Mobile Hub
        let exerciseList = UtilityFunctions.getExerciseList()
        for(index, element) in exerciseList.enumerated() {
            let exerciseItem: Exercise = Exercise()
            
            exerciseItem._exerciseId = NSNumber(value: Int(index))
            exerciseItem._name = element
            
            //Save a new item
            dynamoDbObjectMapper.save(exerciseItem, completionHandler: {
                (error: Error?) -> Void in
                
                if let error = error {
                    print("Amazon DynamoDB Save Error: \(error)")
                    return
                }
                print("An item was saved.")
            })
        }

    }
    
    func getExercise() {
        let dynamoDbObjectMapper = AWSDynamoDBObjectMapper.default()
        
        // Create data object using data models you downloaded from Mobile Hub
        let exerciseItem: Exercise = Exercise();
        //exerciseItem._userId = AWSIdentityManager.default().identityId
        
        dynamoDbObjectMapper.load(
            Exercise.self,
            hashKey: exerciseItem._exerciseId!,
            rangeKey: 1,
            completionHandler: {
                (objectModel: AWSDynamoDBObjectModel?, error: Error?) -> Void in
                if let error = error {
                    print("Amazon DynamoDB Read Error: \(error)")
                    return
                }
                print("An item was read.")
        })
    }
    
    func queryExercise(exerciseId: NSNumber, completion: @escaping(_ success: String, _ exercise: String) -> Void) {
        print("Getting Exercise")
        // 1) Configure the query
        let queryExpression = AWSDynamoDBQueryExpression()
        queryExpression.keyConditionExpression = "#exerciseId = :exerciseId"
        
        queryExpression.expressionAttributeNames = [
            "#exerciseId": "exerciseId",
        ]
        queryExpression.expressionAttributeValues = [
            ":exerciseId": exerciseId
        ]
        
        // 2) Make the query
        let dynamoDbObjectMapper = AWSDynamoDBObjectMapper.default()
        
        dynamoDbObjectMapper.query(Exercise.self, expression: queryExpression) { (output: AWSDynamoDBPaginatedOutput?, error: Error?) in
            if error != nil {
                print(error!.localizedDescription)
                completion((error?.localizedDescription)!, "")
            }
            if output != nil {
                for exercise in output!.items {
                    let exerciseItem = exercise as? Exercise
                    print("\(exerciseItem!._name!)")
                    completion("success", (exerciseItem?._name)!)
                }
            }
        }
    }
}
