//
//  Activity.swift
//  MySampleApp
//
//
// Copyright 2018 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.21
//

import Foundation
import UIKit
import AWSDynamoDB
import AWSAuthCore
import SwiftyJSON

@objcMembers
class Activity: AWSDynamoDBObjectModel, AWSDynamoDBModeling {
    
    var _userId: String?
    var _bodyWeight: NSNumber?
    var _calories: NSNumber?
    var _date: String?
    var _exerciseList: [[String: Any]]?
    //var _exerciseList: JSON?
    var _location: String?
    var _workoutComment: String?
    
    class func dynamoDBTableName() -> String {

        return "sportsapple-mobilehub-1970899121-Activity"
    }
    
    class func hashKeyAttribute() -> String {

        return "_userId"
    }
    
    override class func jsonKeyPathsByPropertyKey() -> [AnyHashable: Any] {
        return [
               "_userId" : "userId",
               "_bodyWeight" : "Body Weight",
               "_calories" : "Calories",
               "_date" : "Date",
               "_exerciseList" : "Exercise List",
               "_location" : "Location",
               "_workoutComment" : "Workout Comment",
        ]
    }
    
    func createActivity() {
        let dynamoDbObjectMapper = AWSDynamoDBObjectMapper.default()
        
        // Create data object using data models you downloaded from Mobile Hub
        let activityItem: Activity = Activity()
        
        activityItem._userId = AWSIdentityManager.default().identityId
        
        activityItem._bodyWeight = 23
        activityItem._calories = 587
        activityItem._date = Date().toString(dateFormat: "dd-MM-yyyy")
        activityItem._location = "Gym"
        activityItem._workoutComment = "Hey this is a comment"
        
        var stringDictionary = [[String: Any]]()
        var exerciseDictionary: Dictionary = [String: Any]()
        var exerciseDictionary2: Dictionary = [String: Any]()
    
        exerciseDictionary["exerciseID"] = 1
        exerciseDictionary["Weight Amount"] = 55
        exerciseDictionary["Reps"] = 12
        exerciseDictionary["Sets"] = 5
        exerciseDictionary["Count"] = 0
        exerciseDictionary["Time"] = 0
        exerciseDictionary["Distance"] = 0
        exerciseDictionary["Exercise Comment"] = "none"
        
        exerciseDictionary2["exerciseID"] = 2
        exerciseDictionary2["Weight Amount"] = 155
        exerciseDictionary2["Reps"] = 112
        exerciseDictionary2["Sets"] = 15
        exerciseDictionary2["Count"] = 10
        exerciseDictionary2["Time"] = 10
        exerciseDictionary2["Distance"] = 10
        exerciseDictionary2["Exercise Comment"] = "none"
        
        stringDictionary.append(exerciseDictionary)
        stringDictionary.append(exerciseDictionary2)
        
        let data = JSON([
            "exerciseID": 3,
            "Weight Amount": 55,
            "Reps": 145,
            "Sets": 132,
            "Count": 111,
            "Time": 0,
            "Distance": 0,
            "Exercise Comment": "newest"]
        )
        
        activityItem._exerciseList = stringDictionary
        
        //Save a new item
        dynamoDbObjectMapper.save(activityItem, completionHandler: {
            (error: Error?) -> Void in
            
            if let error = error {
                print("Amazon DynamoDB Save Error: \(error)")
                return
            }
            print("An item was saved.")
        })
    }
    
    func getActivity() {
        let dynamoDbObjectMapper = AWSDynamoDBObjectMapper.default()
        
        // Create data object using data models you downloaded from Mobile Hub
        let activityItem: Activity = Activity();
        activityItem._userId = AWSIdentityManager.default().identityId
        
        dynamoDbObjectMapper.load(
            Activity.self,
            hashKey: activityItem._userId!,
            rangeKey: "YourArticleId",
            completionHandler: {
                (objectModel: AWSDynamoDBObjectModel?, error: Error?) -> Void in
                if let error = error {
                    print("Amazon DynamoDB Read Error: \(error)")
                    return
                }
                print("An item was read.")
        })
    }
}
