//
//  Activity.swift
//  MySampleApp
//
//
// Copyright 2018 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.
//
// Code generated by AWS Mobile Hub. Amazon gives unlimited permission to 
// copy, distribute and modify it.
//
// Source code generated from template: aws-my-sample-app-ios-swift v0.21
//

import Foundation
import UIKit
import AWSDynamoDB
import AWSAuthCore

@objcMembers
class Activity: AWSDynamoDBObjectModel, AWSDynamoDBModeling {
    
    var _userId: String?
    var _activityId: String?
    var _bodyWeight: NSNumber?
    var _calories: NSNumber?
    var _date: String?
    var _exerciseList: [[String: Any]]?
    var _location: String?
    var _workoutComment: String?
    
    class func dynamoDBTableName() -> String {

        return "sportsapple-mobilehub-1970899121-Activity"
    }
    
    class func hashKeyAttribute() -> String {

        return "_userId"
    }
    
    class func rangeKeyAttribute() -> String {

        return "_activityId"
    }
    
    override class func jsonKeyPathsByPropertyKey() -> [AnyHashable: Any] {
        return [
               "_userId" : "userId",
               "_activityId" : "activityId",
               "_bodyWeight" : "Body Weight",
               "_calories" : "Calories",
               "_date" : "Date",
               "_exerciseList" : "Exercise List",
               "_location" : "Location",
               "_workoutComment" : "Workout Comment",
        ]
    }
    
    func createActivity() {
        let dynamoDbObjectMapper = AWSDynamoDBObjectMapper.default()
        // Create data object using data models you downloaded from Mobile Hub
        let activityItem: Activity = Activity()
        activityItem._userId = AWSIdentityManager.default().identityId
        activityItem._activityId = UUID().uuidString
        activityItem._bodyWeight = 1123
        activityItem._calories = 11587
        activityItem._date = Date().toString(dateFormat: "dd-MM-yyyy")
        activityItem._location = "Gym123"
        activityItem._workoutComment = "Hey this is a comment 3"
        var stringDictionary = [[String: Any]]()
        
        var exerciseDictionary: Dictionary = [String: Any]()
        var exerciseDictionary2: Dictionary = [String: Any]()

        exerciseDictionary["exerciseID"] = 3
        exerciseDictionary["Weight Amount"] = 55
        exerciseDictionary["Reps"] = 12
        exerciseDictionary["Sets"] = 5
        exerciseDictionary["Count"] = 0
        exerciseDictionary["Time"] = 0
        exerciseDictionary["Distance"] = 0
        exerciseDictionary["Exercise Comment"] = "newest"
        
        exerciseDictionary2["exerciseID"] = 4
        exerciseDictionary2["Weight Amount"] = 155
        exerciseDictionary2["Reps"] = 112
        exerciseDictionary2["Sets"] = 15
        exerciseDictionary2["Count"] = 10
        exerciseDictionary2["Time"] = 10
        exerciseDictionary2["Distance"] = 10
        exerciseDictionary2["Exercise Comment"] = "newest"
        
        stringDictionary.append(exerciseDictionary)
        stringDictionary.append(exerciseDictionary2)

        activityItem._exerciseList = stringDictionary
        //Save a new item
        dynamoDbObjectMapper.save(activityItem, completionHandler: {
            (error: Error?) -> Void in
            
            if let error = error {
                print("Amazon DynamoDB Save Error: \(error)")
                return
            }
            print("An item was saved.")
        })
    }
    
    /* let data = JSON([
     "exerciseID": 3,
     "Weight Amount": 55,
     "Reps": 145,
     "Sets": 132,
     "Count": 111,
     "Time": 0,
     "Distance": 0,
     "Exercise Comment": "newest"]
     ) */
    
    
    func getActivity() {
        let dynamoDbObjectMapper = AWSDynamoDBObjectMapper.default()
        
        // Create data object using data models you downloaded from Mobile Hub
        let activityItem: Activity = Activity();
        activityItem._userId = AWSIdentityManager.default().identityId
        
        dynamoDbObjectMapper.load(
            Activity.self,
            hashKey: activityItem._userId!,
            rangeKey: "YourArticleId",
            completionHandler: {
                (objectModel: AWSDynamoDBObjectModel?, error: Error?) -> Void in
                if let error = error {
                    print("Amazon DynamoDB Read Error: \(error)")
                    return
                }
                print("An item was read.")
        })
    }
    
    func queryActivity(userId: String, date: String) {
        let queryExpression = AWSDynamoDBQueryExpression()
        queryExpression.indexName = "UserActivityDate"
        queryExpression.keyConditionExpression = "#Date >= :Date AND #userId = :userId"
        
        queryExpression.expressionAttributeNames = [
            "#userId": "userId",
            "#Date": "Date"
        ]
        queryExpression.expressionAttributeValues = [
            ":Date": date,
            ":userId": userId
        ]
        let dynamoDbObjectMapper = AWSDynamoDBObjectMapper.default()
        
        dynamoDbObjectMapper.query(Activity.self, expression: queryExpression) { (output: AWSDynamoDBPaginatedOutput?, error: Error?) in
            if error != nil {
                print("The request failed. Error: \(String(describing: error))")
            }
            if output != nil {
                for activity in output!.items {
                    let activityItem = activity as? Activity
                    print("\(activityItem!._activityId!)")
                }
            }
        }
    }
}
